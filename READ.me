API приложения:
К сущности Tag:
GET : /tag/{id}–  получить Tag по id.
GET : /tag[?page=номер&size=количество&sort=name-asc/desc]  – получить список всех Tag. Опционально можно задать разбиение
вывода постранично, а также отсортировать информацию по полю name. Значения asc – по возрастанию, desc – по убыванию.
POST: /tag (тело запроса содержит JSON объекта для сохранения) – сохраняет Tag и возвращает объект с присвоенным id
PUT: /tag –  (тело запроса содержит JSON объекта для обновления) – обновляет Tag и возвращает обновленный объект
DELETE: /tag/id – удаляет Tag с указанным id
GET : /popular/user/{id} - Get the most widely used tag of a user with the highest cost of all orders – находит самый
часто встречаемый тэг во всех Сертификатах, которые входят в самый дорогой Заказ пользователя с указанным id.
К сущности GitCertificate:
GET : /cert/{id} –  получить GitCertificate по id.
GET : /cert[?page=номер&size=количество&sort=name-asc/desc, date-asc/desc] – получить список всех GitCertificate. Опционально
можно задать разбиение вывода постранично, а также произвести сортировку получаемого списка: name – сортировка по полю name,
date – сортировка по времени создания записи. Значения asc – по возрастанию, desc – по убыванию. Можно задавать как один,
так и два критерия сортировки.
GET : /cert/has/?field=name&text=value&[sort=name-asc, date-desc] –  получить список GitCertificate у которых в поле name/description,
указывается соответственно в параметре filed,  содержится значение определенное в параметре text. Возможности сортировки аналогичны
вышеуказанным для списка всех GitCertificate.
GET : /cert/tag/tag name[?sort=name-asc, date-desc] - получить список GitCertificate у которых присутствует Tag с указанным
значением поля name. Опциональна сортировка как указано выше.
POST: /cert (тело запроса содержит JSON объекта для сохранения) – сохраняет GitCertificate и возвращает объект с присвоенным id.
PATCH: /cert –  (тело запроса содержит JSON объекта для обновления – поля которые не обновляются могут отсутствовать) – обновляет
GitCertificate и возвращает обновленный объект.
DELETE: /cert/id – удаляет GitCertificate с указанным id.
Пользователь(User)
GET:  /user/{id} –  получить User по id.
GET:  /user/[?page=номер&size=количество&sort=name-asc/desc] –  получить список всех User. Опционально можно задать разбиение
вывода постранично, а также произвести сортировку получаемого списка: name – сортировка по полю username. Значения asc – по
возрастанию, desc – по убыванию.
GET: /user/name/{userName} - получить User по имени
GET: /{id}/orders – получить все заказы указанного User
GET: /{id}/order/{orderId} – получить информацию о заказе (стоимость и дата размещения) заданного User
Заказы пользователя(Order)
POST: /order – сохранить информацию о заказе User – содержится в теле запроса в формате JSON c полями userId и certs – список id
заказанных сертификатов. Количество сертификатов задается указанием нужного числа id данного сертификата.
